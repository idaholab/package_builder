#!/bin/bash
#############
## Specifics
##
DEP=(modules cmake gcc mpich-gcc)
PACKAGE='<PETSC_DEFAULT>-64-mpich-gcc'

#####
# Set the operating system allowed to build this module
#
ARCH=(Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.org/source_packages/<PETSC_DEFAULT>.tar.gz'
EXTRACT='<PETSC_DEFAULT>.tar.gz'
CONFIGURE="./configure \
--prefix=$PACKAGES_DIR/petsc/mpich_<PETSC_DEFAULT>/gcc-opt-64 \
--download-hypre=1 \
--with-ssl=0 \
--with-debugging=no \
--with-pic=1 \
--with-shared-libraries=1 \
--with-64-bit-indices=1 \
--with-cc=mpicc \
--with-cxx=mpicxx \
--with-fc=mpif90 \
--download-fblaslapack=1 \
CC=mpicc CXX=mpicxx FC=mpif90 F77=mpif77 F90=mpif90 \
CFLAGS='-fPIC -fopenmp' \
CXXFLAGS='-fPIC -fopenmp' \
FFLAGS='-fPIC -fopenmp' \
FCFLAGS='-fPIC -fopenmp' \
F90FLAGS='-fPIC -fopenmp' \
F77FLAGS='-fPIC -fopenmp'"

BUILD='false'
INSTALL='false'

pre_run() {
    if [ -d $PACKAGES_DIR/petsc/mpich_<PETSC_DEFAULT>/gcc-opt-64 ]; then
	rm -rf $PACKAGES_DIR/petsc/mpich_<PETSC_DEFAULT>/gcc-opt-64
    fi
    unset MODULEPATH
    source $PACKAGES_DIR/Modules/<MODULES>/init/bash
    module load advanced_modules cmake mpich-gcc
}

post_run() {
    if [ `uname` = "Darwin" ]; then
	    make PETSC_DIR=$1/<PETSC_DEFAULT> PETSC_ARCH=arch-darwin-c-opt all
	    if [ $? -ne 0 ]; then echo "Error while building PETSc"; cleanup 1; fi
	    make PETSC_DIR=$1/<PETSC_DEFAULT> PETSC_ARCH=arch-darwin-c-opt install
	    if [ $? -ne 0 ]; then echo "Error while installing PETSc"; cleanup 1; fi
    else
	    make PETSC_DIR=$1/<PETSC_DEFAULT> PETSC_ARCH=arch-linux2-c-opt all
	    if [ $? -ne 0 ]; then echo "Error while building PETSc"; cleanup 1; fi
	    make PETSC_DIR=$1/<PETSC_DEFAULT> PETSC_ARCH=arch-linux2-c-opt install
	    if [ $? -ne 0 ]; then echo "Error while installing PETSc"; cleanup 1; fi
    fi
    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose/.mpich_<PETSC_DEFAULT>-64-gcc
#%Module1.0#####################################################################
##
## MPICH GCC <PETSC_DEFAULT> 64bit indices modulefile
##
##
##
set         BASE_PATH        $PACKAGES_DIR
setenv      PETSC_DIR        \$BASE_PATH/petsc/mpich_<PETSC_DEFAULT>/gcc-opt-64
EOF
    cd $PACKAGES_DIR/Modules/<MODULES>/mpich_gcc
    ln -s ../modulefiles/moose/.mpich_<PETSC_DEFAULT>-64-gcc <PETSC_DEFAULT>-64
}

##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run `pwd`
# configure
# make
# make install
# post_run `pwd`
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
source $RELATIVE_DIR/functions
