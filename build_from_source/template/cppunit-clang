#!/bin/bash
#############
## Specifics
##
DEP=(modules llvm)
PACKAGE="<CLANG>"
BASE_DIR="<CPPUNIT>"

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.inl.gov/source_packages/<CPPUNIT>.tar.gz'
EXTRACT='<CPPUNIT>.tar.gz'
CONFIGURE='false'
BUILD='true'
INSTALL='true'

pre_run() {
    unset MODULEPATH
    source "$PACKAGES_DIR/Modules/<MODULES>/init/bash"
    module load moose/.<CLANG>
    # we have to run this our selves with out error checking. Mac machines appear to exhibit a bug:
    #
    # rm: conftest.dSYS: is a directory
    #
    # autoconf tries to `rm -f` a directory (which requires an additional -r switch) that appears to
    # only be created on Mac machines. So ignore a configure error here. Dangerous...
    if [ `uname` = "Darwin" ]; then
	./configure --prefix="$PACKAGES_DIR/<CPPUNIT>/<CLANG>"
    else
	CONFIGURE='true'
    fi
}

post_run() {
    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose/.<CPPUNIT>_<CLANG>"
#%Module1.0#####################################################################
##
## <CPPUNIT> <CLANG>
##
set          BASE_PATH         "$PACKAGES_DIR"

set          CPPUNIT_PATH      "\$BASE_PATH/<CPPUNIT>/<CLANG>"
setenv       CPPUNIT_DIR       "\$CPPUNIT_PATH"

if { [uname sysname] != "Darwin" } {
  prepend-path LD_LIBRARY_PATH  "\$CPPUNIT_PATH/lib"
}

prepend-path INCLUDE                     "\$CPPUNIT_PATH/include"
prepend-path PATH                        "\$CPPUNIT_PATH/bin"
EOF
    cd "$PACKAGES_DIR/Modules/<MODULES>/adv_modules"
    if [ -f cppunit-clang ]; then rm -f cppunit-clang; fi
    ln -s ../modulefiles/moose/.<CPPUNIT>_<CLANG> cppunit-clang
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
DOWNLOAD_ONLY=<DOWNLOAD_ONLY>
source "$RELATIVE_DIR/functions" $@
