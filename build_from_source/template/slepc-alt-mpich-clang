#!/bin/bash
#############
## Specifics
##
DEP=(petsc-alt-mpich-clang-opt)
PACKAGE="<MPICH>_<CLANG>"
BASE_DIR="<SLEPC_ALT>"
SERIAL=True

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.inl.gov/source_packages/<SLEPC_ALT>.tar.gz'
EXTRACT='<SLEPC_ALT>.tar.gz'
CONFIGURE="true"
BUILD='false'
INSTALL='false'

pre_run() {
    unset MODULEPATH
    source "$PACKAGES_DIR/Modules/<MODULES>/init/bash"
    module load civet/.civet mpich-clang-petsc_alt_opt
}

post_run() {
    make SLEPC_DIR=`pwd` PETSC_DIR="$PETSC_DIR"
    if [ $? -ne 0 ]; then echo 'Failed to make '$ME; cleanup 1; fi
    make SLEPC_DIR=`pwd` PETSC_DIR="$PETSC_DIR" install
    if [ $? -ne 0 ]; then echo 'Failed to make install '$ME; cleanup 1; fi
    make SLEPC_DIR="$PACKAGES_DIR/$BASE_DIR/$PACKAGE" PETSC_DIR="$PETSC_DIR" PETSC_ARCH="" test
    if [ $? -ne 0 ]; then echo 'Failed to make test '$ME; cleanup 1; fi

    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose/.<SLEPC_ALT>_<MPICH>_<CLANG>"
#%Module1.0#####################################################################
##
## <SLEPC_ALT> modulefile
##
##
##
set         BASE_PATH        "$PACKAGES_DIR"
setenv      SLEPC_DIR        "\$BASE_PATH/<SLEPC_ALT>/<MPICH>_<CLANG>"
EOF

    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/civet/mpich-clang-petsc_alt-slepc"
#%Module1.0#####################################################################
##
## Civet support module
## <SLEPC_ALT>
## <CLANG>
## <MPICH>
##
module load moose/.<MPICH>_<CLANG>
module load moose/.<PETSC_ALT>_<MPICH>_<CLANG>-opt
module load moose/.<SLEPC_ALT>_<MPICH>_<CLANG>
module load moose/.<TBB>
module load moose/.<CPPUNIT>_<CLANG>
module load ccache
module load moose-tools

EOF
    cd "$PACKAGES_DIR/Modules/<MODULES>/mpich_clang"
    ln -s ../modulefiles/moose/.<SLEPC_ALT>_<MPICH>_<CLANG> <SLEPC_ALT>
}

##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run `pwd`
# configure
# make
# make install
# post_run `pwd`
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
DOWNLOAD_ONLY=<DOWNLOAD_ONLY>
source "$RELATIVE_DIR/functions" $@
