#!/bin/bash
#############
## Specifics
##
DEP=(modules)
PACKAGE="<LCOV>"
SERIAL=True

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='false'
EXTRACT='false'
CONFIGURE='false'
BUILD='false'
INSTALL='true'

pre_run() {
    LCOV_VERSION=$(echo <LCOV> | cut -d- -f2)
    git clone https://github.com/linux-test-project/lcov.git
    cd lcov
    git checkout $LCOV_VERSION
    if [ "$?" != "0" ]; then echo "Failed to clone lcov"; cleanup 1; fi

    if [ `uname` = 'Darwin' ]; then
        sed -i '' -e 's|/usr/local|<PACKAGES_DIR>/<LCOV>|g' Makefile
    else
        sed -i'' -e 's|/usr/local|<PACKAGES_DIR>/<LCOV>|g' Makefile
    fi
    # Remove previous module section
    if [ `uname` = 'Darwin' ]; then
        sed -i '' -e '/#LCOV/,/#ENDLCOV/d' "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose-tools"
    else
        sed -i'' -e '/#LCOV/,/#ENDLCOV/d' "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose-tools"
    fi
}
post_run() {
    # Append new paths to moose-tools module
    cat <<EOF >> "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose-tools"
#LCOV
prepend-path    PATH            "\$BASE_PATH/<LCOV>/bin"
prepend-path    MANPATH         "\$BASE_PATH/<LCOV>/share/man"
#ENDLCOV
EOF
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
DOWNLOAD_ONLY=<DOWNLOAD_ONLY>
source "$RELATIVE_DIR/functions" $@
