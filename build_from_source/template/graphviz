#!/bin/bash
#############
## Specifics
##
DEP=(modules glib pango pcre)
PACKAGE="<GRAPHVIZ>"

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.inl.gov/source_packages/<GRAPHVIZ>.tar.gz'
EXTRACT='<GRAPHVIZ>.tar.gz'
CONFIGURE='false'
BUILD='true'
INSTALL='true'

pre_run() {
    unset MODULEPATH
    source "$PACKAGES_DIR/Modules/<MODULES>/init/bash"
    module load moose-tools
    CONFIGURE="CCPFLAGS='-I/opt/X11/include' ./configure --prefix=$PACKAGES_DIR/<GRAPHVIZ> --without-x --without-qt --disable-tcl --enable-swig=no"
}
post_run() {
    # Remove previous module section
    if [ `uname` = 'Darwin' ]; then
        sed -i '' -e '/#GRAPHVIZ/,/#ENDGRAPHVIZ/d' "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose-tools"
    else
        sed -i'' -e '/#GRAPHVIZ/,/#ENDGRAPHVIZ/d' "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose-tools"
    fi
    # Append new paths to moose-tools module
    cat <<EOF >> "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose-tools"
#GRAPHVIZ
prepend-path    PATH            "\$BASE_PATH/<GRAPHVIZ>/bin"
prepend-path    MANPATH         "\$BASE_PATH/<GRAPHVIZ>/share/man"
#ENDGRAPHVIZ
EOF
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
DOWNLOAD_ONLY=<DOWNLOAD_ONLY>
source "$RELATIVE_DIR/functions" $@
