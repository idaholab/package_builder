#!/bin/bash
#############
## Specifics
##
DEP=(modules)
PACKAGE='git-lfs'
SERIAL=True

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.org/source_packages/<GITLFS>.tar.gz'
EXTRACT='<GITLFS>.tar.gz'
CONFIGURE="false"
BUILD='false'
INSTALL='false'

pre_run() {
    if [ -d $PACKAGES_DIR/$PACKAGE ]; then
      rm -rf $PACKAGES_DIR/$PACKAGE
    fi
    mkdir -p $PACKAGES_DIR/$PACKAGE
    cp $PACKAGE $PACKAGES_DIR/$PACKAGE/
}

post_run() {
    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/modulefiles/$PACKAGE
#%Module1.0#####################################################################
##
## $PACKAGE modulefile
##
##
##
set              BASE_PATH   $PACKAGES_DIR
proc ModulesHelp { } {
        puts stderr "\tTo use $PACKAGE you must first run:"
        puts stderr "\n\t\tgit lfs install"
        puts stderr "\n\tThis will install the hooks necessary to use git with"
        puts stderr "\tLFS support. The above command will make modifications"
        puts stderr "\tto your ~/.gitconfig file."
        puts stderr "\n\tYou only need to perform the above command once. But"
        puts stderr "\tyou will always need to have this module loaded in"
        puts stderr "\torder to use git (even for non LFS operations)."
        puts stderr "\n\tYou can uninstall the hooks by running:"
        puts stderr "\n\t\tgit lfs uninstall\n"
}

prepend-path     PATH       \$BASE_PATH/$PACKAGE

EOF
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
source $RELATIVE_DIR/functions
