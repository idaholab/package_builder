#!/bin/bash
#############
## Specifics
##
DEP=(modules)
PACKAGE="<AUTOCONF>"
BASE_DIR='autotools'

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.inl.gov/source_packages/<AUTOCONF>.tar.gz'
EXTRACT='<AUTOCONF>.tar.gz'
CONFIGURE='true'
BUILD='true'
INSTALL='true'

pre_run() {
    # Remove previous module file
    rm -f "$PACKAGES_DIR/Modules/<MODULES>/adv_modules/autotools"
}

post_run() {
    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/adv_modules/autotools"
#%Module1.0#####################################################################
##
## <AUTOCONF> <AUTOMAKE> Module file
##
##
##
set BASE_PATH       "$PACKAGES_DIR"
prepend-path        PATH       "\$BASE_PATH/$BASE_DIR/<AUTOCONF>/bin"
EOF
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
DOWNLOAD_ONLY=<DOWNLOAD_ONLY>
source "$RELATIVE_DIR/functions" $@
