#!/bin/bash
#############
## Specifics
##
DEP=(modules cmake mpich-clang)
PACKAGE="<MPICH>_<CLANG>-opt"
BASE_DIR="<TRILINOS>"

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='false'
EXTRACT='false'
CONFIGURE="false"
BUILD='true'
INSTALL='true'

pre_run() {
    unset MODULEPATH
    source "$PACKAGES_DIR/Modules/<MODULES>/init/bash"
    module load advanced_modules cmake moose/.<MPICH>_<CLANG>

    # Clone Trilinos
    try_command 5 "git clone https://github.com/trilinos/Trilinos.git"
    cd Trilinos
    git checkout tags/<TRILINOS>

    # Clone DTK
    try_command 5 "git clone https://github.com/ORNL-CEES/DataTransferKit.git"
    cd DataTransferKit
    git checkout tags/<DTK>

    cd ../
    mkdir clang-opt; cd clang-opt
    CONFIGURE="
cmake \
-D CMAKE_INSTALL_PREFIX:PATH=$PACKAGES_DIR/<TRILINOS>/<MPICH>_<CLANG>-opt \
-D CMAKE_INSTALL_NAME_DIR:STRING=$PACKAGES_DIR/<TRILINOS>/<MPICH>_<CLANG>-opt/lib \
-D CMAKE_BUILD_TYPE:STRING=RELEASE \
-D CMAKE_CXX_COMPILER:FILEPATH='mpicxx' \
-D CMAKE_C_COMPILER:FILEPATH='mpicc' \
-D CMAKE_Fortran_COMPILER:FILEPATH='mpif90' \
-D CMAKE_CXX_FLAGS:STRING='-g -Wall -fPIC' \
-D CMAKE_C_FLAGS:STRING='-g -fPIC' \
-D CMAKE_Fortran_FLAGS:STRING='-g -fPIC' \
-D CMAKE_VERBOSE_MAKEFILE:BOOL=OFF \
-D CMAKE_SKIP_RULE_DEPENDENCY=ON \
-D BUILD_SHARED_LIBS=ON \
-D MPI_BASE_DIR:PATH=$MPI_HOME \
-D DataTransferKit_ENABLE_DBC:BOOL=ON \
-D DataTransferKit_ENABLE_TESTS:BOOL=OFF \
-D Trilinos_EXTRA_REPOSITORIES='DataTransferKit' \
-D Trilinos_ENABLE_EXPORT_MAKEFILES:BOOL=ON \
-D Trilinos_ENABLE_TESTS:BOOL=OFF \
-D Trilinos_ENABLE_EXAMPLES:BOOL=OFF \
-D Trilinos_ENABLE_EXPLICIT_INSTANTIATION:BOOL=OFF \
-D Trilinos_ETI_VERSION_TWO:BOOL=ON \
-D Trilinos_ENABLE_ALL_PACKAGES:BOOL=OFF \
-D Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES:BOOL=OFF \
-D Trilinos_ENABLE_TpetraCore:BOOL=ON \
-D Trilinos_ENABLE_DataTransferKit:BOOL=ON \
-D Trilinos_ENABLE_DataTransferKitIntrepidAdapters:BOOL=ON \
-D Trilinos_ENABLE_DataTransferKitSTKMeshAdapters:BOOL=OFF \
-D Trilinos_ENABLE_DataTransferKitMoabAdapters:BOOL=OFF \
-D Trilinos_ENABLE_DataTransferKitLibmeshAdapters:BOOL=OFF \
-D Trilinos_ENABLE_DataTransferKitClassicDTKAdapters:BOOL=ON \
-D Trilinos_ENABLE_Epetra:BOOL=ON \
-D Trilinos_ENABLE_EpetraExt:BOOL=ON \
-D Trilinos_ENABLE_Stratimikos:BOOL=ON \
-D Trilinos_ENABLE_AztecOO:BOOL=ON \
-D Trilinos_ENABLE_Ifpack:BOOL=ON \
-D Trilinos_ENABLE_ML:BOOL=ON \
-D Trilinos_ENABLE_NOX:BOOL=ON \
-D Trilinos_ENABLE_Pike:BOOL=ON \
-D Trilinos_ENABLE_CXX11:BOOL=ON \
-D Trilinos_VERBOSE_CONFIGURE:BOOL=OFF \
-D Trilinos_ENABLE_INSTALL_CMAKE_CONFIG_FILES:BOOL=OFF \
-D Trilinos_ENABLE_EXPORT_MAKEFILES:BOOL=ON \
-D Trilinos_DEPS_XML_OUTPUT_FILE:FILEPATH="" \
-D Trilinos_TPL_SYSTEM_INCLUDE_DIRS:BOOL=ON \
-D Kokkos_ENABLE_Serial:BOOL=ON \
-D Kokkos_ENABLE_OpenMP:BOOL=OFF \
-D Kokkos_ENABLE_Pthread:BOOL=OFF \
-D Kokkos_ENABLE_Cuda:BOOL=OFF \
-D Tpetra_INST_DOUBLE:BOOL=ON \
-D Tpetra_INST_FLOAT:BOOL=OFF \
-D Tpetra_INST_COMPLEX_FLOAT:BOOL=OFF \
-D Tpetra_INST_COMPLEX_DOUBLE:BOOL=OFF \
-D Tpetra_INST_INT_UNSIGNED_LONG:BOOL=ON \
-D Tpetra_INST_INT_INT:BOOL=ON \
-D Tpetra_INST_INT_UNSIGNED:BOOL=OFF \
-D Tpetra_INST_INT_LONG_LONG:BOOL=OFF \
-D Tpetra_INST_INT_LONG:BOOL=OFF \
-D Tpetra_INST_SERIAL:BOOL=ON \
-D Tpetra_INST_OPENMP:BOOL=OFF \
-D Tpetra_INST_PTHREAD:BOOL=OFF \
-D Tpetra_INST_CUDA:BOOL=OFF \
-D TPL_ENABLE_MPI:BOOL=ON \
-D TPL_ENABLE_HWLOC:BOOL=ON \
-D TPL_ENABLE_HWLOC=OFF \
-D TPL_ENABLE_BoostLib=OFF \
-D TPL_ENABLE_Boost=OFF \
..
"
}

post_run() {
    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose/.<MPICH>_<CLANG>_<TRILINOS>-opt"
#%Module1.0#####################################################################
##
##  <TRILINOS> <MPICH> <CLANG> Optimized Module 
##
##
##
set          BASE_PATH          "$PACKAGES_DIR"
setenv       TRILINOS_DIR       "\$BASE_PATH/<TRILINOS>/<MPICH>_<CLANG>-opt"
EOF

    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/civet/mpich-clang-petsc_alt-vtk-trilinos-opt"
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_ALT>
## <CLANG>
## <MPICH>
## <VTK>
## <TRILINOS>
##
module load moose/.<MPICH>_<CLANG>
module load moose/.<PETSC_ALT>_<MPICH>_<CLANG>-opt
module load moose/.<VTK>_<CLANG>
module load moose/.<TBB>
module load moose/.<CPPUNIT>_<CLANG>
module load moose/.<MPICH>_<CLANG>_<TRILINOS>-opt
module load ccache
module load moose-tools

EOF

    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/civet/mpich-clang-petsc_alt-trilinos-opt"
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_ALT>
## <CLANG>
## <MPICH>
## <TRILINOS>
##
module load moose/.<MPICH>_<CLANG>
module load moose/.<PETSC_ALT>_<MPICH>_<CLANG>-opt
module load moose/.<TBB>
module load moose/.<CPPUNIT>_<CLANG>
module load moose/.<MPICH>_<CLANG>_<TRILINOS>-opt
module load ccache
module load moose-tools

EOF

    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/civet/mpich-clang-petsc_default-vtk-trilinos-opt"
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <CLANG>
## <MPICH>
## <VTK>
## <TRILINOS>
##
module load moose/.<MPICH>_<CLANG>
module load moose/.<PETSC_DEFAULT>_<MPICH>_<CLANG>-opt
module load moose/.<VTK>_<CLANG>
module load moose/.<TBB>
module load moose/.<CPPUNIT>_<CLANG>
module load moose/.<MPICH>_<CLANG>_<TRILINOS>-opt
module load ccache
module load moose-tools

EOF

    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/civet/mpich-clang-petsc_default-trilinos-opt"
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <CLANG>
## <MPICH>
## <TRILINOS>
##
module load moose/.<MPICH>_<CLANG>
module load moose/.<PETSC_DEFAULT>_<MPICH>_<CLANG>-opt
module load moose/.<TBB>
module load moose/.<CPPUNIT>_<CLANG>
module load moose/.<MPICH>_<CLANG>_<TRILINOS>-opt
module load ccache
module load moose-tools

EOF

    cd "$PACKAGES_DIR/Modules/<MODULES>/mpich_clang; rm <TRILINOS>-opt"
    ln -s ../modulefiles/moose/.<MPICH>_<CLANG>_<TRILINOS>-opt <TRILINOS>-opt

    TRILINOS_INCLUDE="$PACKAGES_DIR/<TRILINOS>/<MPICH>_<CLANG>-opt/include"
    sed -i.orig "s^-I$TRILINOS_INCLUDE^-isystem $TRILINOS_INCLUDE^g" "$TRILINOS_INCLUDE/Makefile.export.Trilinos"
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
DOWNLOAD_ONLY=<DOWNLOAD_ONLY>
source "$RELATIVE_DIR/functions" $@
