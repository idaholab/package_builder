#!/bin/bash
#############
## Specifics
##
DEP=(modules cmake mpich-gcc)
PACKAGE="<GCC>"
BASE_DIR="<VTK>"

#####
# Set the operating system allowed to build this module
#
ARCH=(Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.inl.gov/source_packages/<VTK>.tar.gz'
EXTRACT='<VTK>.tar.gz'
CONFIGURE='false'
BUILD='true'
INSTALL='true'

pre_run() {
    unset MODULEPATH
    source "$PACKAGES_DIR/Modules/<MODULES>/init/bash"
    module load advanced_modules cmake moose/.<MPICH>_<GCC>
    mkdir ../vtk-build; cd ../vtk-build
    CONFIGURE="cmake ../<VTK> -DCMAKE_INSTALL_PREFIX=$PACKAGES_DIR/<VTK>/<GCC> -DCMAKE_INSTALL_RPATH:STRING=$PACKAGES_DIR/<VTK>/<GCC>/lib -DCMAKE_INSTALL_RPATH_USE_LINK_PATH:BOOL=ON -DCMAKE_INSTALL_NAME_DIR:STRING=$PACKAGES_DIR/<VTK>/<GCC>/lib -DCMAKE_MACOSX_RPATH:BOOL=ON -DVTK_WRAP_PYTHON=ON -DVTK_Group_MPI:BOOL=ON -Wno-dev"
}

post_run() {
    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose/.<VTK>_<GCC>"
#%Module1.0#####################################################################
##
## <VTK> <GCC> Module
##
##
##
set             BASE_PATH          "$PACKAGES_DIR"

if { [uname sysname] != "Darwin" } {
  prepend-path    LD_LIBRARY_PATH    "\$BASE_PATH/<VTK>/<GCC>/lib"
}

setenv          VTKINCLUDE_DIR                "\$BASE_PATH/<VTK>/<GCC>/include/<VTK_INCLUDE>"
prepend-path    INCLUDE_PATH                  "\$BASE_PATH/<VTK>/<GCC>/include/<VTK_INCLUDE>"
setenv          VTKLIB_DIR                    "\$BASE_PATH/<VTK>/<GCC>/lib"
setenv          VTK6_PYTHON_DIR               "\$BASE_PATH/<VTK>/<GCC>/lib/python2.7/site-packages"
EOF

    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/civet/mpich-gcc-petsc_default-vtk"
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <GCC>
## <MPICH>
## <VTK>
##
module load moose/.<MPICH>_<GCC>
module load moose/.<PETSC_DEFAULT>_<MPICH>_<GCC>-opt
module load moose/.<VTK>_<GCC>
module load moose/.<TBB>
module load ccache
module load miniconda moose-tools

EOF

    cat <<EOF > "$PACKAGES_DIR/Modules/<MODULES>/civet/mpich-gcc-petsc_alt-vtk"
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_ALT>
## <GCC>
## <MPICH>
## <VTK>
##
module load moose/.<MPICH>_<GCC>
module load moose/.<PETSC_ALT>_<MPICH>_<GCC>-opt
module load moose/.<VTK>_<GCC>
module load moose/.<TBB>
module load ccache
module load miniconda moose-tools

EOF

    unset CC CXX
    cd "$PACKAGES_DIR/Modules/<MODULES>/adv_modules"
    if [ -f vtk-gcc ]; then rm -f vtk-gcc; fi
    ln -s ../modulefiles/moose/.<VTK>_<GCC> vtk-gcc
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
DOWNLOAD_ONLY=<DOWNLOAD_ONLY>
source "$RELATIVE_DIR/functions" $@
