#!/bin/bash
#############
## Specifics
##
DEP=(modules cmake gcc llvm openmpi-clang)
PACKAGE='<PETSC_DEFAULT>-openmpi-clang-opt'
SERIAL=True

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='http://mooseframework.org/source_packages/<PETSC_DEFAULT>.tar.gz'
EXTRACT='<PETSC_DEFAULT>.tar.gz'
CONFIGURE="false"
BUILD='false'
INSTALL='false'

clean_petsc() {
    if [ -d $PACKAGES_DIR/petsc/openmpi_<PETSC_DEFAULT>/clang-opt-superlu ]; then
	rm -rf $PACKAGES_DIR/petsc/openmpi_<PETSC_DEFAULT>/clang-opt-superlu
    fi
    clean_attempt
    extract
}

pre_run() {
    unset MODULEPATH
    source $PACKAGES_DIR/Modules/<MODULES>/init/bash
    module load advanced_modules cmake openmpi-clang
    CONFIGURE="./configure \
--prefix=$PACKAGES_DIR/petsc/openmpi_<PETSC_DEFAULT>/clang-opt-superlu \
--download-hypre=1 \
--with-ssl=0 \
--with-debugging=no \
--with-pic=1 \
--with-shared-libraries=1 \
--with-cc=mpicc \
--with-cxx=mpicxx \
--with-fc=mpif90 \
--download-fblaslapack=1 \
--download-metis=1 \
--download-parmetis=1 \
--download-superlu_dist=1 \
--download-mumps=1 \
--download-scalapack=1 \
-CC=mpicc -CXX=mpicxx -FC=mpif90 -F77=mpif77 -F90=mpif90 \
-CFLAGS='-fPIC -fopenmp' \
-CXXFLAGS='-fPIC -fopenmp' \
-FFLAGS='-fPIC -fopenmp' \
-FCFLAGS='-fPIC -fopenmp' \
-F90FLAGS='-fPIC -fopenmp' \
-F77FLAGS='-fPIC -fopenmp'"

    if [ `uname` = "Darwin" ]; then
	try_command 3 "clean_petsc; configure; make MAKE_NP=1 PETSC_DIR=$1/<PETSC_DEFAULT> PETSC_ARCH=arch-darwin-c-opt all; make PETSC_DIR=$1/<PETSC_DEFAULT> PETSC_ARCH=arch-darwin-c-opt install"
    else
	try_command 3 "clean_petsc; configure; make MAKE_NP=1 PETSC_DIR=$1/<PETSC_DEFAULT> PETSC_ARCH=arch-linux2-c-opt all; make PETSC_DIR=$1/<PETSC_DEFAULT> PETSC_ARCH=arch-linux2-c-opt install"
    fi
    # So we do not run configure a second time
    CONFIGURE="false"
}

post_run() {
    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/modulefiles/moose/.openmpi_<PETSC_DEFAULT>_opt-clang
#%Module1.0#####################################################################
##
## OpenMPI Clang <PETSC_DEFAULT> optimized superlu modulefile
##
##
##
set         BASE_PATH        $PACKAGES_DIR
setenv      PETSC_DIR        \$BASE_PATH/petsc/openmpi_<PETSC_DEFAULT>/clang-opt-superlu
EOF

    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/civet/openmpi-clang-petsc_default-vtk-trilinos-opt
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <CLANG>
## <OPENMPI>
## <VTK>
## <TRILINOS>
##
module load moose/.<OPENMPI>_clang
module load moose/.openmpi_<PETSC_DEFAULT>_opt-clang
module load moose/.<VTK>-clang
module load moose/.<TBB>
module load moose/.<CPPUNIT>-clang
module load moose/.openmpi_<TRILINOS>-clang-opt
module load ccache
module load moose-tools

EOF

    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/civet/openmpi-clang-petsc_default-vtk-trilinos-dbg
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <CLANG>
## <OPENMPI>
## <VTK>
## <TRILINOS>
##
module load moose/.<OPENMPI>_clang
module load moose/.openmpi_<PETSC_DEFAULT>_opt-clang
module load moose/.<VTK>-clang
module load moose/.<TBB>
module load moose/.<CPPUNIT>-clang
module load moose/.openmpi_<TRILINOS>-clang-dbg
module load ccache
module load moose-tools

EOF

    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/civet/openmpi-clang-petsc_default-trilinos-opt
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <CLANG>
## <OPENMPI>
## <TRILINOS>
##
module load moose/.<OPENMPI>_clang
module load moose/.openmpi_<PETSC_DEFAULT>_opt-clang
module load moose/.<TBB>
module load moose/.<CPPUNIT>-clang
module load moose/.openmpi_<TRILINOS>-clang-opt
module load ccache
module load moose-tools

EOF

    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/civet/openmpi-clang-petsc_default-trilinos-dbg
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <CLANG>
## <OPENMPI>
## <TRILINOS>
##
module load moose/.<OPENMPI>_clang
module load moose/.openmpi_<PETSC_DEFAULT>_opt-clang
module load moose/.<TBB>
module load moose/.<CPPUNIT>-clang
module load moose/.openmpi_<TRILINOS>-clang-dbg
module load ccache
module load moose-tools

EOF

    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/civet/openmpi-clang-petsc_default-vtk
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <CLANG>
## <OPENMPI>
## <VTK>
##
module load moose/.<OPENMPI>_clang
module load moose/.openmpi_<PETSC_DEFAULT>_opt-clang
module load moose/.<VTK>-clang
module load moose/.<TBB>
module load moose/.<CPPUNIT>-clang
module load ccache
module load moose-tools

EOF

    cat <<EOF > $PACKAGES_DIR/Modules/<MODULES>/civet/openmpi-clang-petsc_default
#%Module1.0#####################################################################
##
## Civet support module
## <PETSC_DEFAULT>
## <CLANG>
## <OPENMPI>
##
module load moose/.<OPENMPI>_clang
module load moose/.openmpi_<PETSC_DEFAULT>_opt-clang
module load moose/.<TBB>
module load moose/.<CPPUNIT>-clang
module load ccache
module load moose-tools

EOF

    cd $PACKAGES_DIR/Modules/<MODULES>/openmpi_clang
    ln -s ../modulefiles/moose/.openmpi_<PETSC_DEFAULT>_opt-clang <PETSC_DEFAULT>
}

##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run `pwd`
# configure
# make
# make install
# post_run `pwd`
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
source $RELATIVE_DIR/functions
